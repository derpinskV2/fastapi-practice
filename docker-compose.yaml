name: fastapiapi

services:
  nginx:
    container_name: nginx
    hostname: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - backend

  api:
    build:
      dockerfile: Dockerfile
      context: ./api
    restart: unless-stopped
    expose:
      - "8000"
    ports:
        - "8000:8000"
    env_file:
      - api/.env
    volumes:
      - ./api:/app/
    depends_on:
      - db
    networks:
      - backend

  db:
    container_name: database
    hostname: database
    restart: unless-stopped
    image: postgres:17.4-bookworm
    env_file:
      - api/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend

  cache:
    image: redis:7.4.2
    container_name: cache
    hostname: cache
    restart: unless-stopped
    expose:
      - "6379"
    networks:
      - backend

volumes:
  pgdata:
networks:
  backend:
    driver: bridge
